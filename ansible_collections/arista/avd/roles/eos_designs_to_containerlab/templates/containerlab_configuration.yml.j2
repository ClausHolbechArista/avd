{# CONTAINERLABS configuration rendering #}
---
name: {{ fabric_name }}

{% for fabric_switch in groups[fabric_name] | arista.avd.natural_sort %}
{# Load fabric_switch facts #}
{%     set fabric_switch_facts_filename = switch_facts_dir ~ '/' ~ fabric_switch ~ '.json' %}
{%     set fabric_switch_facts_file_data = lookup('ansible.builtin.file', fabric_switch_facts_filename) | from_json %}
{%     set fabric_switch_facts = fabric_switch_facts_file_data.switch | arista.avd.default %}
{# Generate topology nodes #}
{%     if fabric_switch_facts is arista.avd.defined(fail_action='warning',var_name='Switch Facts for ' ~ fabric_switch) %}
{%         if fabric_switch_facts.mgmt_ip is arista.avd.defined %}

{# For First loop generate mgmt network and nodes header #}
{%             if loop.first %}
mgmt:
  network: mgmt_{{ fabric_name }}
{# We require that all devices are in the same management subnet #}
  ipv4_subnet: {{ fabric_switch_facts.mgmt_ip | ansible.netcommon.ipaddr('subnet') }}

{# NODES definition #}
topology:
  nodes:
{%             endif %}
    {{ fabric_switch }}:
      image: {{ ceos_version }}
      mgmt_ipv4: {{ fabric_switch_facts.mgmt_ip | ansible.netcommon.ipaddr('address') }}
      kind: ceos
      startup-config: {{ containerlab_container_data_path }}/configs/{{ fabric_switch }}.cfg
{%         endif %}
{%     endif %}
{% endfor %}

{# Generate topology links #}
  links:
{% for fabric_switch in groups[fabric_name] | arista.avd.natural_sort %}
{%     set topology_peers_facts_filename = topology_facts_dir ~ '/' ~ fabric_switch ~ '.json' %}
{%     set topology_peers_facts_file_data = lookup('ansible.builtin.file', topology_peers_facts_filename) | from_json %}
{%     set fabric_switch_topology_facts = topology_peers_facts_file_data.topology | arista.avd.default %}
{%     for link in fabric_switch_topology_facts.links | arista.avd.convert_dicts | arista.avd.natural_sort %}
    - endpoints:
        - {{ fabric_switch }}:{{ link.name | lower | replace('ethernet','eth') }}
        - {{ link.peer }}:{{ link.peer_interface | lower | replace('ethernet','eth') }}
{%     endfor %}
{% endfor %}
