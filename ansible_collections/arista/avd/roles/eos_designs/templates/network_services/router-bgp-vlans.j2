{# tenant router bgp evpn configuration- MAC-VRF VLAN-Based #}
  vlans:
{% if vxlan_vlan_aware_bundles == false or switch.default_mpls_overlay_role in ["server", "client"] %}
{%     for tenant in network_services_data.tenants %}
{%         set tenant_mac_vrf_id_base = tenant.mac_vrf_rt_base | arista.avd.default(tenant.mac_vrf_vni_base) %}
{%         for vrf in tenant.vrfs %}
{%             for svi in vrf.svis %}
{%                 if svi.vxlan is arista.avd.defined(false) %}
{%                     continue %}
{%                 endif %}
{%                 set svi_int = svi.id | int %}
{%                 set vlan_rt_override = svi.rt_override | arista.avd.default(svi.vni_override) %}
{%                 set vlan_rt = vlan_rt_override | arista.avd.default(
                             tenant_mac_vrf_id_base + svi_int) %}
    {{ svi.id }}:
      tenant: {{ tenant.name }}
      rd: "{{ network_services_data.evpn_rd_admin_subfield }}:{{ vlan_rt }}"
      route_targets:
        both:
          - "{{ network_services_data.evpn_rt_admin_subfield or vlan_rt }}:{{ vlan_rt }}"
      redistribute_routes:
        - learned
{%             endfor %}
{%         endfor %}
{%         for l2vlan in tenant.l2vlans %}
{%             if l2vlan.vxlan is arista.avd.defined(false) %}
{%                 continue %}
{%             endif %}
{%             set l2vlan_int = l2vlan.id | int %}
{%             set l2vlan_rt_override = l2vlan.rt_override | arista.avd.default(l2vlan.vni_override) %}
{%             set vlan_rt = l2vlan_rt_override | arista.avd.default(
                       tenant_mac_vrf_id_base + l2vlan_int) %}
    {{ l2vlan.id }}:
      tenant: {{ tenant.name }}
      rd: "{{ network_services_data.evpn_rd_admin_subfield }}:{{ vlan_rt }}"
      route_targets:
        both:
          - "{{ network_services_data.evpn_rt_admin_subfield or vlan_rt }}:{{ vlan_rt }}"
      redistribute_routes:
        - learned
{%         endfor %}
{%     endfor %}
{% endif %}
