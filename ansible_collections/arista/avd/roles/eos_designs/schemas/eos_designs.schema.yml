allow_other_keys: true
keys:
  bfd_multihop:
    display_name: BFD Multihop tunning
    keys:
      interval:
        default: 300
        type: int
      min_rx:
        default: 300
        type: int
      multiplier:
        default: 3
        type: int
    type: dict
  bgp_as:
    description: AS number to use to configure overlay when "overlay_routing_protocol"
      == IBGP
    display_name: BGP AS
    type: str
  bgp_ecmp:
    description: Maximum ECMP for BGP multi-path
    type: int
  bgp_maximum_paths:
    default: 4
    description: Maximum Paths for BGP multi-path
    type: int
  bgp_peer_groups:
    description: 'Leverage an Arista EOS switch to generate the encrypted password
      using the correct peer group name.

      Note that the name of the peer groups use ''-'' instead of ''_'' in EOS configuration.

      '
    display_name: BGP peer group names and encrypted password
    keys:
      EVPN_OVERLAY_PEERS:
        keys:
          name:
            default: EVPN-OVERLAY-PEERS
            type: str
          password:
            display_name: Encrypted Password
            type: str
        studios_options:
          exclude: true
        type: dict
        unsupported_from_version: 4.0
      IPv4_UNDERLAY_PEERS:
        keys:
          name:
            default: IPv4-UNDERLAY-PEERS
            type: str
          password:
            display_name: Encrypted Password
            type: str
        studios_options:
          exclude: true
        type: dict
        unsupported_from_version: 4.0
      MLAG_IPv4_UNDERLAY_PEER:
        keys:
          name:
            default: MLAG-IPv4-UNDERLAY-PEER
            type: str
          password:
            display_name: Encrypted Password
            type: str
        studios_options:
          exclude: true
        type: dict
        unsupported_from_version: 4.0
      evpn_overlay_core:
        keys:
          name:
            default: EVPN-OVERLAY-CORE
            type: str
          password:
            display_name: Encrypted Password
            type: str
        type: dict
      evpn_overlay_peers:
        keys:
          name:
            default: EVPN-OVERLAY-PEERS
            type: str
          password:
            display_name: Encrypted Password
            type: str
        type: dict
      ipv4_underlay_peers:
        keys:
          name:
            default: IPv4-UNDERLAY-PEERS
            type: str
          password:
            display_name: Encrypted Password
            type: str
        type: dict
      mlag_ipv4_underlay_peer:
        keys:
          name:
            default: MLAG-IPv4-UNDERLAY-PEER
            type: str
          password:
            display_name: Encrypted Password
            type: str
        type: dict
    type: dict
  dc_name:
    description: 'Optional DC Name, only used in SNMP location and Fabric Documentation.

      Recommended to be common between all devices within a Site

      '
    display_name: DC Name
    type: str
  default_igmp_snooping_enabled:
    default: true
    description: 'Disable IGMP snooping at fabric level.

      If set, it overrides per vlan settings

      '
    display_name: Default IGMP Snooping enabled
    type: bool
  evpn_ebgp_gateway_multihop:
    default: 15
    description: 'Default of 15, considering a large value to avoid BGP reachability
      issues in very complex DCI networks.

      Adapt the value for your specific topology.

      '
    display_name: EVPN Gateway EBGP Multihop
    type: int
  evpn_ebgp_multihop:
    default: 3
    description: 'Default of 3, the recommended value for a 3 stage spine and leaf
      topology.

      Set to a higher value to allow for very large and complex topologies.

      '
    display_name: EVPN EBGP Multihop
    type: int
  evpn_hostflap_detection:
    display_name: EVPN Host Flapping Settings
    keys:
      enabled:
        default: true
        description: If set to false it will disable EVPN host-flap detection
        type: bool
      expiry_timeout:
        description: Time (in seconds) to purge a MAC duplication issue
        type: int
      threshold:
        default: 5
        description: Minimum number of MAC moves that indicate a MAC duplication issue
        type: int
      window:
        default: 180
        description: Time (in seconds) to detect a MAC duplication issue
        type: int
    type: dict
  evpn_import_pruning:
    default: false
    description: 'Enable VPN import pruning (Min. EOS 4.24.2F)

      The Route Target extended communities carried by incoming VPN paths will

      be examined. If none of those Route Targets have been configured for import,

      the path will be immediately discarded

      '
    display_name: EVPN Import Pruning
    type: bool
  evpn_overlay_bgp_rtc:
    default: false
    description: 'Enable Route Target Membership Constraint Address Family on EVPN
      overlay BGP peerings (Min. EOS 4.25.1F)

      Requires use eBGP as overlay protocol.

      '
    display_name: EVPN Overlay BGP RTC
    type: bool
  evpn_prevent_readvertise_to_server:
    default: false
    description: 'Configure route-map on eBGP sessions towards route-servers, where
      prefixes with the peer''s ASN in the AS Path are filtered away.

      This is very useful in very large scale networks, where convergence will be
      quicker by not having to return all updates received

      from Route-server-1 to Router-server-2 just for Route-server-2 to throw them
      away because of AS Path loop detection.

      '
    display_name: EVPN Prevent Readvertise to Server
    type: bool
  evpn_short_esi_prefix:
    default: '0000:0000:'
    description: Configure prefix for "short_esi" values
    display_name: EVPN Short ESI Prefix
    type: str
  evpn_vlan_aware_bundles:
    default: false
    description: Enable vlan aware bundles for EVPN MAC-VRF
    display_name: EVPN VLAN-Aware Bundles
    type: bool
  fabric_name:
    description: Fabric Name, required to match Ansible Group name covering all devices
      in the Fabric
    display_name: Fabric Name
    required: true
    type: str
  isis_advertise_passive_only:
    default: false
    display_name: ISIS Advertise Passive Only
    type: bool
  isis_area_id:
    default: '49.0001'
    display_name: Underlay ISIS Area
    type: str
  isis_default_is_type:
    default: level-2
    display_name: ISIS Default IS Type
    type: str
    valid_values:
    - level-1-2
    - level-1
    - level-2
  isis_ti_lfa:
    display_name: ISIS TI-LFA
    keys:
      enabled:
        default: false
        type: bool
      local_convergence_delay:
        default: 10000
        description: Local convergence delay in mpls
        type: int
      protection:
        type: str
        valid_values:
        - link
        - node
    type: dict
  mgmt_gateway:
    display_name: OOB Management Gateway IP
    format: ipv4
    required: true
    type: str
  node_type_key:
    display_name: Node Type Structure
    keys:
      defaults:
        keys:
          bgp_as:
            description: Required with eBGP
            display_name: BGP AS Number
            type: str
          bgp_defaults:
            description: List of EOS command to apply to BGP daemon
            display_name: BGP Defaults
            items:
              display_name: EOS Command
              type: str
            type: list
          evpn_gateway:
            description: 'Node is acting as EVPN Multi-Domain Gateway

              New BGP peer-group is generated between EVPN GWs in different domains
              or between GWs and Route Servers. Name can be changed under "bgp_peer_groups.evpn_overlay_core"
              variable

              L3 rechability for different EVPN GWs must be already in place, it is
              recommended to use DCI & L3 Edge if Route Servers and GWs are not defined
              under the same Ansible inventory.

              '
            display_name: EVPN Gateway
            keys:
              evpn_l2:
                description: Enable EVPN Gateway functionality for route-types 2 (MAC-IP)
                  and 3 (IMET)
                display_name: EVPN L2
                keys:
                  enabled:
                    default: false
                    type: bool
                type: dict
              evpn_l3:
                description: Enable EVPN Gateway functionality for route-type 5 (IP-PREFIX)
                display_name: EVPN L3
                keys:
                  enabled:
                    default: false
                    type: bool
                  inter_domain:
                    default: true
                    type: bool
                type: dict
              remote_peers:
                description: 'Define remote peers of the EVPN VXLAN Gateway.

                  If the hostname can be found in the inventory, ip_address and BGP
                  ASN will be automatically populated. Manual override takes precedence.

                  If the peer''s hostname can not be found in the inventory, ip_address
                  and bgp_as must be defined.

                  '
                items:
                  keys:
                    bgp_as:
                      description: BGP ASN of remote Route Server
                      display_name: BGP AS Number
                      type: str
                    hostname:
                      description: Hostname of remote EVPN GW server
                      type: str
                    ip_address:
                      description: Peering IP of remote Route Server
                      display_name: IP Address
                      format: ipv4
                      type: str
                  type: dict
                type: list
            type: dict
          evpn_role:
            description: Acting role in EVPN control plane. Default is set in node_type
              definition from node_type_keys.
            display_name: EVPN Role
            type: str
            valid_values:
            - client
            - server
            - none
          evpn_route_servers:
            description: List of nodes acting as EVPN Route-Servers / Route-Reflectors
            display_name: EVPN Route Servers
            items:
              display_name: EVPN Route Server
              type: str
            type: list
          evpn_services_l2_only:
            default: false
            description: 'Possibility to prevent configuration of Tenant VRFs and
              SVIs

              Override node definition "network_services_l3" from node_type_keys

              This allows support for centralized routing.

              '
            display_name: EVPN Services Layer2 only
            type: bool
          filter:
            description: 'Filter L3 and L2 network services based on tenant and tags
              (and operation filter)

              If filter is not defined it will default to all

              '
            display_name: Network Services Filters
            keys:
              always_include_vrfs_in_tenants:
                description: 'List of tenants where VRFs will be configured even if
                  VLANs are not included in tags

                  Useful for L3 "border" leaf.

                  '
                display_name: Always Include VRFs in Tenants
                items:
                  display_name: Tenant
                  type: str
                type: list
              tags:
                default:
                - all
                items:
                  display_name: Tag
                  type: str
                type: list
              tenants:
                default:
                - all
                items:
                  display_name: Tenant
                  type: str
                type: list
            type: dict
          id:
            description: Unique identifier used for IP addressing and other algorithms
            display_name: Node ID
            required: true
            type: int
          igmp_snooping_enabled:
            default: true
            description: Activate or deactivate IGMP snooping on device level
            display_name: IGMP Snooping Enabled
            type: bool
          inband_management_subnet:
            description: 'Optional IP subnet assigned to Inband Management SVI on
              l2leafs in default VRF.

              Parent l3leafs will have SVI with "ip virtual-router" and host-route
              injection based on ARP. This allows all l3leafs to reuse the same subnet

              SVI IP address will be assigned as follows:

              virtual-router: <subnet> + 1

              l3leaf A      : <subnet> + 2 (same IP on all l3leaf A)

              l3leaf B      : <subnet> + 3 (same IP on all l3leaf B)

              l2leafs       : <subnet> + 3 + <l2leaf id>

              GW on l2leafs : <subnet> + 1

              Assign range larger than total l2leafs + 5

              '
            format: ipv4_cidr
            type: str
          inband_management_vlan:
            default: 4092
            description: VLAN number assigned to Inband Management SVI on l2leafs
              in default VRF
            display_name: Inband Management VLAN
            type: int
          is_type:
            default: level-2
            display_name: IS Type
            type: str
            valid_values:
            - level-1-2
            - level-1
            - level-2
          isis_maximum_paths:
            description: Number of path to configure in ECMP for ISIS
            display_name: ISIS Maximum Paths
            type: int
          isis_system_id_prefix:
            description: (4.4 hexadecimal)
            display_name: ISIS System ID prefix
            pattern: '[0-9a-f]{4}\.[0-9a-f]{4}'
            type: str
          lacp_port_id_range:
            description: 'This will generate the "lacp port-id range", "begin" and
              "end" values based on node "id" and the number of nodes in the "node_group".

              Unique LACP port-id ranges are recommended for EVPN Multihoming designs.

              '
            display_name: LACP Port ID Range
            keys:
              enabled:
                default: false
                type: bool
              offset:
                default: 0
                description: 'Offset is used to avoid overlapping port-id ranges of
                  different switches

                  Useful when a "connected-endpoint" is connected to switches in different
                  "node_groups".

                  '
                type: int
              size:
                default: 128
                description: Recommended size > = number of ports in the switch.
                type: int
            type: dict
          link_tracking:
            description: 'This configures the Link Tracking Group on a switch as well
              as adds the p2p-uplinks of the switch as the upstream interfaces.

              Useful in EVPN multhoming designs.

              '
            keys:
              enabled:
                default: false
                type: bool
              groups:
                default:
                - name: LT_GROUP1
                description: 'By default a single group named "LT_GROUP1" is defined
                  with default values.

                  Any groups defined under "groups" will replace the default.

                  '
                display_name: Link Tracking Groups
                items:
                  keys:
                    links_minimum:
                      max: 100000
                      min: 1
                      type: int
                    name:
                      display_name: Tracking Group Name
                      type: str
                    recovery_delay:
                      description: default -> platform_settings_mlag_reload_delay
                        -> 300
                      max: 3600
                      min: 0
                      type: int
                  type: dict
                type: list
            type: dict
          loopback_ipv4_offset:
            default: 0
            description: 'Offset all assigned loopback IP addresses.

              Required when the < loopback_ipv4_pool > is same for 2 different node_types
              (like spine and l3leaf) to avoid over-lapping IPs.

              For example, set the minimum offset l3leaf.defaults.loopback_ipv4_offset:
              < total # spine switches > or vice versa.

              '
            display_name: Loopback IPv4 Offset
            type: int
          loopback_ipv4_pool:
            description: IPv4 subnet for Loopback0 allocation
            display_name: Loopback0 IPv4 Pool
            format: ipv4_cidr
            type: str
          max_parallel_uplinks:
            description: Number of parallel links towards uplink switches
            type: int
          max_uplink_switches:
            description: 'Maximum number of uplink switches.

              Changing this value may change IP Addressing on uplinks.

              Can be used to reserve IP space for future expansions.

              '
            type: int
          mgmt_interface:
            description: 'Management Interface Name

              Default -> platform_management_interface -> mgmt_interface -> "Management1"

              '
            display_name: Mgmt Interface
            type: str
          mgmt_ip:
            description: Management Interface IP Address
            display_name: Mgmt Interface IP
            format: cidr
            type: str
          mlag:
            default: true
            description: Enable / Disable auto MLAG, when two nodes are defined in
              node group.
            display_name: Enable MLAG
            type: bool
          mlag_dual_primary_detection:
            default: false
            description: Enable / Disable MLAG dual primary detection
            display_name: MLAG Dual Primary Detection
            type: bool
          mlag_interfaces:
            description: Required when MLAG leafs are present in the topology
            display_name: MLAG interfaces
            items:
              pattern: Ethernet[\d/]+
              type: str
            type: list
          mlag_interfaces_speed:
            description: < interface_speed | forced interface_speed | auto interface_speed
              >
            display_name: MLAG interfaces speed
            type: str
          mlag_peer_ipv4_pool:
            description: 'IP address pool used for MLAG Peer Link (control link).
              IP is derived from the node id.

              Required when MLAG leafs present in topology.

              '
            display_name: MLAG Peer IPv4 Pool
            format: ipv4_cidr
            type: str
          mlag_peer_l3_ipv4_pool:
            description: 'IP address pool used for MLAG underlay L3 peering. IP is
              derived from the node id.

              Required when MLAG leafs present in topology and they are using a separate
              L3 peering VLAN.

              '
            display_name: MLAG L3 Peering IPv4 Pool
            format: ipv4_cidr
            type: str
          mlag_peer_l3_vlan:
            default: 4093
            description: 'Underlay L3 peering SVI interface id

              If set to 0 or the same vlan as mlag_peer_vlan, the mlag_peer_vlan will
              be used for L3 peering

              '
            display_name: MLAG L3 Peering VLAN
            max: 4094
            min: 0
            type: int
          mlag_peer_link_allowed_vlans:
            default: 2-4094
            display_name: MLAG Peer-link Allowed VLAN range
            type: str
          mlag_peer_vlan:
            default: 4094
            description: MLAG Peer Link (control link) SVI interface id
            display_name: MLAG Peer VLAN
            max: 4094
            min: 1
            type: int
          node_sid_base:
            default: 0
            description: Node-SID base for isis-sr underlay variants. Combined with
              node id to generate ISIS-SR node-SID.
            display_name: Node-SID Base
            type: int
          platform:
            description: Arista platform family
            display_name: Hardware Platform
            type: str
          rack:
            description: Rack that the switch is located in (only used in snmp_settings
              location)
            type: str
          raw_eos_cli:
            description: EOS CLI rendered directly on the root level of the final
              EOS configuration
            display_name: Raw EOS CLI
            type: str
          short_esi:
            description: 'short_esi only valid for l2leaf devices using port-channel
              uplink

              Setting short_esi to "auto" generates the short_esi automatically using
              a hash of configuration elements.

              < 0000:0000:0000 | auto >

              '
            display_name: Short ESI
            type: str
          spanning_tree_mode:
            required: true
            type: str
            valid_values:
            - mstp
            - rstp
            - rapid-pvst
            - none
          spanning_tree_priority:
            default: 32768
            type: int
          spanning_tree_root_super:
            default: false
            type: bool
          structured_config:
            description: Custom structured config for eos_cli_config_gen
            studios_options:
              exclude: true
            type: str
          uplink_interface_speed:
            description: 'Point-to-Point interface speed - will apply to uplinks on
              both ends

              < interface_speed | forced interface_speed | auto interface_speed >

              '
            type: str
          uplink_interfaces:
            description: Local uplink interfaces
            items:
              pattern: Ethernet[\d/]+
              type: str
            type: list
          uplink_ipv4_pool:
            description: IPv4 subnet to use to connect to uplink switches
            display_name: Uplink IPv4 Pool
            format: ipv4_cidr
            type: str
          uplink_macsec:
            description: Enable MacSec on all uplinks
            display_name: Uplink MacSec
            keys:
              profile:
                display_name: MacSec profile name
                type: str
            type: dict
          uplink_ptp:
            description: Enable PTP on all infrastructure links
            display_name: Uplink PTP
            keys:
              enable:
                default: false
                type: bool
            type: dict
          uplink_switch_interfaces:
            description: Interfaces located on uplink switches
            items:
              pattern: Ethernet[\d/]+
              type: str
            type: list
          uplink_switches:
            items:
              description: Hostname of uplink switch
              type: str
            type: list
          virtual_router_mac_address:
            description: Virtual router mac address for anycast gateway
            display_name: Virtual Router MAC Address
            format: mac
            required: true
            type: str
          vtep_loopback:
            description: Set VXLAN source interface.
            display_name: VTEP Loopback Interface Name
            pattern: Loopback[\d/]+
            type: str
          vtep_loopback_ipv4_pool:
            description: IPv4 subnet for VTEP-Loopback allocation
            display_name: VTEP Loopback IPv4 Pool
            format: ipv4_cidr
            type: str
        type: dict
    type: dict
  overlay_loopback_description:
    description: Customizable overlay loopback description
    type: str
  overlay_routing_protocol:
    case_sensitive: false
    default: ebgp
    description: "- The following overlay routing protocols are supported:\n  - EBGP
      (default for l3ls-evpn)\n  - IBGP (only with OSPF or ISIS variants in underlay)\n"
    type: str
    valid_values:
    - ebgp
    - ibgp
    - BGP
  p2p_uplinks_mtu:
    default: 9000
    display_name: Point to Point Links MTU
    type: int
  p2p_uplinks_qos_profile:
    description: QOS Profile assigned on all infrastructure links
    display_name: P2P Uplinks QoS Profile
    type: str
  pod_name:
    description: 'POD Name, only used in Fabric Documentation | Optional, fallback
      to dc_name and then to fabric_name.

      Recommended to be common between Spines, Leafs within a POD (One l3ls topology)

      '
    display_name: POD Name
    type: str
  type:
    display_name: Device Type
    required: true
    type: str
    valid_values:
    - spine
    - l3leaf
    - l2leaf
    - super-spine
    - overlay-controller
  underlay_isis_instance_name:
    default: EVPN_UNDERLAY
    display_name: Underlay ISIS Instance Name
    type: str
  underlay_ospf_area:
    default: 0.0.0.0
    display_name: Underlay OSPF Area
    format: ipv4
    type: str
  underlay_ospf_bfd_enable:
    default: false
    display_name: Enable Underlay OSPF BFD
    type: bool
  underlay_ospf_max_lsa:
    default: 12000
    display_name: Underlay OSPF Max LSA
    type: int
  underlay_ospf_process_id:
    default: 100
    display_name: Underlay OSPF Process ID
    type: int
  underlay_rfc5549:
    default: false
    description: 'Point to Point Underlay with RFC 5549(eBGP), i.e. IPv6 Unnumbered

      Requires "underlay_routing_protocol: ebgp"

      '
    display_name: Enable RFC5549 in Underlay
    type: bool
  underlay_routing_protocol:
    case_sensitive: false
    default: ebgp
    description: "- The following underlay routing protocols are supported:\n  - EBGP
      (default for l3ls-evpn)\n  - OSPF.\n  - ISIS.\n  - ISIS-SR*.\n  - ISIS-LDP*.\n
      \ - ISIS-SR-LDP*.\n  - OSPF-LDP*.\n- The variables should be applied to all
      devices in the fabric.\n\n*Only supported with core_interfaces data model.\n"
    type: str
    valid_values:
    - ebgp
    - ospf
    - isis
    - isis-sr
    - isis-ldp
    - isis-sr-ldp
    - ospf-ldp
    - BGP
  uplink_ptp:
    description: Enable PTP on all infrastructure links
    display_name: Uplink PTP
    keys:
      enable:
        default: false
        type: bool
    type: dict
  vtep_vvtep_ip:
    description: 'IP Address used as Virtual VTEP. Will be configured as secondary
      IP on loopback1

      This is only needed for centralized routing designs

      '
    display_name: Virtual VTEP IP
    format: ipv4_cidr
    type: str
type: dict
