# Testing duplicate VRF definitions according to the following rules documented in the schema.
# Also see eos_designs_unit_tests for testing of the intended functionality.

# It is recommended to only define a VRF in one Tenant. If the same VRF name is used across multiple tenants and those tenants
# are accepted by `filter.tenants` on the node, the VRF definitions will be merged according to the following guidelines:
#   - All lists like `svis`, `l3_interfaces`, `bgp_peers` etc. will be combined.
#     Duplicate items in the combined lists will raise an error.
#   - Settings only concerning other `nodes` are ignored.
#   - All other settings are merged. If the same key is in multiple VRFs, they must match exactly or an error will be raised.
#   - All settings on the parent Tenants like `mac_vrf_vni_base` must match exactly or an error will be raised.

type: l3leaf
l3leaf:
  defaults:
    loopback_ipv4_pool: 192.168.255.0/24
    vtep_loopback_ipv4_pool: 192.168.254.0/24
    virtual_router_mac_address: 00:dc:00:00:00:0a
  nodes:
    duplicate-vrfs-duplicate-svi:
      id: 101
      bgp_as: 101
      filter:
        tenants:
          - TENANT1
          - DUPLICATE_TENANT1

tenants:
  - name: TENANT1
    mac_vrf_vni_base: 10000
    vrfs:
      - name: VRF1
        vrf_id: 1
        svis:
          - id: 100
            enabled: true
            name: VLAN100
            ip_address_virtual: 10.0.100.1/24

  - name: DUPLICATE_TENANT1
    mac_vrf_vni_base: 10000
    vrfs:
      - name: VRF1
        vrf_id: 1
        svis:
          # Duplicate definition of VLAN 100.
          - id: 100
            enabled: true
            name: VLAN100
            ip_address_virtual: 10.0.100.1/24

expected_error_message: "Duplicate VLAN ID '100' found in Tenant(s) 'DUPLICATE_TENANT1' during configuration of SVI in VRF 'VRF1'. Other VLAN is in Tenant(s) 'TENANT1'."
